// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ClaimUnstakedGLW extends ethereum.Event {
  get params(): ClaimUnstakedGLW__Params {
    return new ClaimUnstakedGLW__Params(this);
  }
}

export class ClaimUnstakedGLW__Params {
  _event: ClaimUnstakedGLW;

  constructor(event: ClaimUnstakedGLW) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EIP712DomainChanged extends ethereum.Event {
  get params(): EIP712DomainChanged__Params {
    return new EIP712DomainChanged__Params(this);
  }
}

export class EIP712DomainChanged__Params {
  _event: EIP712DomainChanged;

  constructor(event: EIP712DomainChanged) {
    this._event = event;
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PermanentFreeze extends ethereum.Event {
  get params(): PermanentFreeze__Params {
    return new PermanentFreeze__Params(this);
  }
}

export class PermanentFreeze__Params {
  _event: PermanentFreeze;

  constructor(event: PermanentFreeze) {
    this._event = event;
  }
}

export class Stake extends ethereum.Event {
  get params(): Stake__Params {
    return new Stake__Params(this);
  }
}

export class Stake__Params {
  _event: Stake;

  constructor(event: Stake) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unstake extends ethereum.Event {
  get params(): Unstake__Params {
    return new Unstake__Params(this);
  }
}

export class Unstake__Params {
  _event: Unstake;

  constructor(event: Unstake) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GLOW__accountUnstakedPositionPointersResultValue0Struct extends ethereum.Tuple {
  get tail(): BigInt {
    return this[0].toBigInt();
  }

  get head(): BigInt {
    return this[1].toBigInt();
  }
}

export class GLOW__eip712DomainResult {
  value0: Bytes;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: Address;
  value5: Bytes;
  value6: Array<BigInt>;

  constructor(
    value0: Bytes,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: Address,
    value5: Bytes,
    value6: Array<BigInt>,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromFixedBytes(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigIntArray(this.value6));
    return map;
  }

  getFields(): Bytes {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getVersion(): string {
    return this.value2;
  }

  getChainId(): BigInt {
    return this.value3;
  }

  getVerifyingContract(): Address {
    return this.value4;
  }

  getSalt(): Bytes {
    return this.value5;
  }

  getExtensions(): Array<BigInt> {
    return this.value6;
  }
}

export class GLOW__gcaInflationDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getTotalAlreadyClaimed(): BigInt {
    return this.value1;
  }

  getTotalToClaim(): BigInt {
    return this.value2;
  }
}

export class GLOW__grantsTreasuryInflationDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getTotalAlreadyClaimed(): BigInt {
    return this.value1;
  }

  getTotalToClaim(): BigInt {
    return this.value2;
  }
}

export class GLOW__unstakedPositionsOfResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get cooldownEnd(): BigInt {
    return this[1].toBigInt();
  }
}

export class GLOW__unstakedPositionsOf1ResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get cooldownEnd(): BigInt {
    return this[1].toBigInt();
  }
}

export class GLOW__vetoCouncilInflationDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getTotalAlreadyClaimed(): BigInt {
    return this.value1;
  }

  getTotalToClaim(): BigInt {
    return this.value2;
  }
}

export class GLOW extends ethereum.SmartContract {
  static bind(address: Address): GLOW {
    return new GLOW("GLOW", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  EARLY_LIQUIDITY_ADDRESS(): Address {
    let result = super.call(
      "EARLY_LIQUIDITY_ADDRESS",
      "EARLY_LIQUIDITY_ADDRESS():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_EARLY_LIQUIDITY_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "EARLY_LIQUIDITY_ADDRESS",
      "EARLY_LIQUIDITY_ADDRESS():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  EMERGENCY_COOLDOWN_PERIOD(): BigInt {
    let result = super.call(
      "EMERGENCY_COOLDOWN_PERIOD",
      "EMERGENCY_COOLDOWN_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_EMERGENCY_COOLDOWN_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "EMERGENCY_COOLDOWN_PERIOD",
      "EMERGENCY_COOLDOWN_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  GCA_AND_MINER_POOL_ADDRESS(): Address {
    let result = super.call(
      "GCA_AND_MINER_POOL_ADDRESS",
      "GCA_AND_MINER_POOL_ADDRESS():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_GCA_AND_MINER_POOL_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "GCA_AND_MINER_POOL_ADDRESS",
      "GCA_AND_MINER_POOL_ADDRESS():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  GCA_AND_MINER_POOL_INFLATION_PER_SECOND(): BigInt {
    let result = super.call(
      "GCA_AND_MINER_POOL_INFLATION_PER_SECOND",
      "GCA_AND_MINER_POOL_INFLATION_PER_SECOND():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_GCA_AND_MINER_POOL_INFLATION_PER_SECOND(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "GCA_AND_MINER_POOL_INFLATION_PER_SECOND",
      "GCA_AND_MINER_POOL_INFLATION_PER_SECOND():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  GENESIS_TIMESTAMP(): BigInt {
    let result = super.call(
      "GENESIS_TIMESTAMP",
      "GENESIS_TIMESTAMP():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_GENESIS_TIMESTAMP(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "GENESIS_TIMESTAMP",
      "GENESIS_TIMESTAMP():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  GRANTS_TREASURY_ADDRESS(): Address {
    let result = super.call(
      "GRANTS_TREASURY_ADDRESS",
      "GRANTS_TREASURY_ADDRESS():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_GRANTS_TREASURY_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "GRANTS_TREASURY_ADDRESS",
      "GRANTS_TREASURY_ADDRESS():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  GRANTS_TREASURY_INFLATION_PER_SECOND(): BigInt {
    let result = super.call(
      "GRANTS_TREASURY_INFLATION_PER_SECOND",
      "GRANTS_TREASURY_INFLATION_PER_SECOND():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_GRANTS_TREASURY_INFLATION_PER_SECOND(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "GRANTS_TREASURY_INFLATION_PER_SECOND",
      "GRANTS_TREASURY_INFLATION_PER_SECOND():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_UNSTAKES_BEFORE_EMERGENCY_COOLDOWN(): BigInt {
    let result = super.call(
      "MAX_UNSTAKES_BEFORE_EMERGENCY_COOLDOWN",
      "MAX_UNSTAKES_BEFORE_EMERGENCY_COOLDOWN():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_UNSTAKES_BEFORE_EMERGENCY_COOLDOWN(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_UNSTAKES_BEFORE_EMERGENCY_COOLDOWN",
      "MAX_UNSTAKES_BEFORE_EMERGENCY_COOLDOWN():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  USDG(): Address {
    let result = super.call("USDG", "USDG():(address)", []);

    return result[0].toAddress();
  }

  try_USDG(): ethereum.CallResult<Address> {
    let result = super.tryCall("USDG", "USDG():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  VETO_COUNCIL_ADDRESS(): Address {
    let result = super.call(
      "VETO_COUNCIL_ADDRESS",
      "VETO_COUNCIL_ADDRESS():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_VETO_COUNCIL_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "VETO_COUNCIL_ADDRESS",
      "VETO_COUNCIL_ADDRESS():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  VETO_COUNCIL_INFLATION_PER_SECOND(): BigInt {
    let result = super.call(
      "VETO_COUNCIL_INFLATION_PER_SECOND",
      "VETO_COUNCIL_INFLATION_PER_SECOND():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_VETO_COUNCIL_INFLATION_PER_SECOND(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "VETO_COUNCIL_INFLATION_PER_SECOND",
      "VETO_COUNCIL_INFLATION_PER_SECOND():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accountUnstakedPositionPointers(
    account: Address,
  ): GLOW__accountUnstakedPositionPointersResultValue0Struct {
    let result = super.call(
      "accountUnstakedPositionPointers",
      "accountUnstakedPositionPointers(address):((uint128,uint128))",
      [ethereum.Value.fromAddress(account)],
    );

    return changetype<GLOW__accountUnstakedPositionPointersResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_accountUnstakedPositionPointers(
    account: Address,
  ): ethereum.CallResult<GLOW__accountUnstakedPositionPointersResultValue0Struct> {
    let result = super.tryCall(
      "accountUnstakedPositionPointers",
      "accountUnstakedPositionPointers(address):((uint128,uint128))",
      [ethereum.Value.fromAddress(account)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<GLOW__accountUnstakedPositionPointersResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)],
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allowlistedContracts(param0: Address): boolean {
    let result = super.call(
      "allowlistedContracts",
      "allowlistedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_allowlistedContracts(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowlistedContracts",
      "allowlistedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  approve(spender: Address, value: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(value),
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, value: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(value),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimGLWFromGCAAndMinerPool(): BigInt {
    let result = super.call(
      "claimGLWFromGCAAndMinerPool",
      "claimGLWFromGCAAndMinerPool():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_claimGLWFromGCAAndMinerPool(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimGLWFromGCAAndMinerPool",
      "claimGLWFromGCAAndMinerPool():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimGLWFromGrantsTreasury(): BigInt {
    let result = super.call(
      "claimGLWFromGrantsTreasury",
      "claimGLWFromGrantsTreasury():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_claimGLWFromGrantsTreasury(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimGLWFromGrantsTreasury",
      "claimGLWFromGrantsTreasury():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimGLWFromVetoCouncil(): BigInt {
    let result = super.call(
      "claimGLWFromVetoCouncil",
      "claimGLWFromVetoCouncil():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_claimGLWFromVetoCouncil(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimGLWFromVetoCouncil",
      "claimGLWFromVetoCouncil():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, requestedDecrease: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(requestedDecrease),
      ],
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    requestedDecrease: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(requestedDecrease),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eip712Domain(): GLOW__eip712DomainResult {
    let result = super.call(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      [],
    );

    return new GLOW__eip712DomainResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBytes(),
      result[6].toBigIntArray(),
    );
  }

  try_eip712Domain(): ethereum.CallResult<GLOW__eip712DomainResult> {
    let result = super.tryCall(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GLOW__eip712DomainResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBytes(),
        value[6].toBigIntArray(),
      ),
    );
  }

  emergencyLastUnstakeTimestamp(param0: Address): BigInt {
    let result = super.call(
      "emergencyLastUnstakeTimestamp",
      "emergencyLastUnstakeTimestamp(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_emergencyLastUnstakeTimestamp(
    param0: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "emergencyLastUnstakeTimestamp",
      "emergencyLastUnstakeTimestamp(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gcaAndMinerPoolLastClaimedTimestamp(): BigInt {
    let result = super.call(
      "gcaAndMinerPoolLastClaimedTimestamp",
      "gcaAndMinerPoolLastClaimedTimestamp():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_gcaAndMinerPoolLastClaimedTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gcaAndMinerPoolLastClaimedTimestamp",
      "gcaAndMinerPoolLastClaimedTimestamp():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gcaInflationData(): GLOW__gcaInflationDataResult {
    let result = super.call(
      "gcaInflationData",
      "gcaInflationData():(uint256,uint256,uint256)",
      [],
    );

    return new GLOW__gcaInflationDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_gcaInflationData(): ethereum.CallResult<GLOW__gcaInflationDataResult> {
    let result = super.tryCall(
      "gcaInflationData",
      "gcaInflationData():(uint256,uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GLOW__gcaInflationDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  glowUnlocker(): Address {
    let result = super.call("glowUnlocker", "glowUnlocker():(address)", []);

    return result[0].toAddress();
  }

  try_glowUnlocker(): ethereum.CallResult<Address> {
    let result = super.tryCall("glowUnlocker", "glowUnlocker():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  grantsTreasuryInflationData(): GLOW__grantsTreasuryInflationDataResult {
    let result = super.call(
      "grantsTreasuryInflationData",
      "grantsTreasuryInflationData():(uint256,uint256,uint256)",
      [],
    );

    return new GLOW__grantsTreasuryInflationDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_grantsTreasuryInflationData(): ethereum.CallResult<GLOW__grantsTreasuryInflationDataResult> {
    let result = super.tryCall(
      "grantsTreasuryInflationData",
      "grantsTreasuryInflationData():(uint256,uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GLOW__grantsTreasuryInflationDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  grantsTreasuryLastClaimedTimestamp(): BigInt {
    let result = super.call(
      "grantsTreasuryLastClaimedTimestamp",
      "grantsTreasuryLastClaimedTimestamp():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_grantsTreasuryLastClaimedTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "grantsTreasuryLastClaimedTimestamp",
      "grantsTreasuryLastClaimedTimestamp():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue),
      ],
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nonces(owner: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_nonces(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numStaked(param0: Address): BigInt {
    let result = super.call("numStaked", "numStaked(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_numStaked(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numStaked", "numStaked(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  permanentlyFreezeTransfers(): boolean {
    let result = super.call(
      "permanentlyFreezeTransfers",
      "permanentlyFreezeTransfers():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_permanentlyFreezeTransfers(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "permanentlyFreezeTransfers",
      "permanentlyFreezeTransfers():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(to: Address, value: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(value),
    ]);

    return result[0].toBoolean();
  }

  try_transfer(to: Address, value: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(value),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(from: Address, to: Address, value: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(value),
      ],
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    from: Address,
    to: Address,
    value: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(value),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  unstakedPositionsOf(
    account: Address,
    start: BigInt,
    end: BigInt,
  ): Array<GLOW__unstakedPositionsOfResultValue0Struct> {
    let result = super.call(
      "unstakedPositionsOf",
      "unstakedPositionsOf(address,uint256,uint256):((uint192,uint64)[])",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(end),
      ],
    );

    return result[0].toTupleArray<GLOW__unstakedPositionsOfResultValue0Struct>();
  }

  try_unstakedPositionsOf(
    account: Address,
    start: BigInt,
    end: BigInt,
  ): ethereum.CallResult<Array<GLOW__unstakedPositionsOfResultValue0Struct>> {
    let result = super.tryCall(
      "unstakedPositionsOf",
      "unstakedPositionsOf(address,uint256,uint256):((uint192,uint64)[])",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(end),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<GLOW__unstakedPositionsOfResultValue0Struct>(),
    );
  }

  unstakedPositionsOf1(
    account: Address,
  ): Array<GLOW__unstakedPositionsOf1ResultValue0Struct> {
    let result = super.call(
      "unstakedPositionsOf",
      "unstakedPositionsOf(address):((uint192,uint64)[])",
      [ethereum.Value.fromAddress(account)],
    );

    return result[0].toTupleArray<GLOW__unstakedPositionsOf1ResultValue0Struct>();
  }

  try_unstakedPositionsOf1(
    account: Address,
  ): ethereum.CallResult<Array<GLOW__unstakedPositionsOf1ResultValue0Struct>> {
    let result = super.tryCall(
      "unstakedPositionsOf",
      "unstakedPositionsOf(address):((uint192,uint64)[])",
      [ethereum.Value.fromAddress(account)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<GLOW__unstakedPositionsOf1ResultValue0Struct>(),
    );
  }

  vetoCouncilInflationData(): GLOW__vetoCouncilInflationDataResult {
    let result = super.call(
      "vetoCouncilInflationData",
      "vetoCouncilInflationData():(uint256,uint256,uint256)",
      [],
    );

    return new GLOW__vetoCouncilInflationDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_vetoCouncilInflationData(): ethereum.CallResult<GLOW__vetoCouncilInflationDataResult> {
    let result = super.tryCall(
      "vetoCouncilInflationData",
      "vetoCouncilInflationData():(uint256,uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GLOW__vetoCouncilInflationDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  vetoCouncilLastClaimedTimestamp(): BigInt {
    let result = super.call(
      "vetoCouncilLastClaimedTimestamp",
      "vetoCouncilLastClaimedTimestamp():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_vetoCouncilLastClaimedTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "vetoCouncilLastClaimedTimestamp",
      "vetoCouncilLastClaimedTimestamp():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _earlyLiquidityAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _vestingContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _gcaAndMinerPoolAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _vetoCouncilAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _grantsTreasuryAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _usdg(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _uniswapV2Factory(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _gccContract(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ClaimGLWFromGCAAndMinerPoolCall extends ethereum.Call {
  get inputs(): ClaimGLWFromGCAAndMinerPoolCall__Inputs {
    return new ClaimGLWFromGCAAndMinerPoolCall__Inputs(this);
  }

  get outputs(): ClaimGLWFromGCAAndMinerPoolCall__Outputs {
    return new ClaimGLWFromGCAAndMinerPoolCall__Outputs(this);
  }
}

export class ClaimGLWFromGCAAndMinerPoolCall__Inputs {
  _call: ClaimGLWFromGCAAndMinerPoolCall;

  constructor(call: ClaimGLWFromGCAAndMinerPoolCall) {
    this._call = call;
  }
}

export class ClaimGLWFromGCAAndMinerPoolCall__Outputs {
  _call: ClaimGLWFromGCAAndMinerPoolCall;

  constructor(call: ClaimGLWFromGCAAndMinerPoolCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimGLWFromGrantsTreasuryCall extends ethereum.Call {
  get inputs(): ClaimGLWFromGrantsTreasuryCall__Inputs {
    return new ClaimGLWFromGrantsTreasuryCall__Inputs(this);
  }

  get outputs(): ClaimGLWFromGrantsTreasuryCall__Outputs {
    return new ClaimGLWFromGrantsTreasuryCall__Outputs(this);
  }
}

export class ClaimGLWFromGrantsTreasuryCall__Inputs {
  _call: ClaimGLWFromGrantsTreasuryCall;

  constructor(call: ClaimGLWFromGrantsTreasuryCall) {
    this._call = call;
  }
}

export class ClaimGLWFromGrantsTreasuryCall__Outputs {
  _call: ClaimGLWFromGrantsTreasuryCall;

  constructor(call: ClaimGLWFromGrantsTreasuryCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimGLWFromVetoCouncilCall extends ethereum.Call {
  get inputs(): ClaimGLWFromVetoCouncilCall__Inputs {
    return new ClaimGLWFromVetoCouncilCall__Inputs(this);
  }

  get outputs(): ClaimGLWFromVetoCouncilCall__Outputs {
    return new ClaimGLWFromVetoCouncilCall__Outputs(this);
  }
}

export class ClaimGLWFromVetoCouncilCall__Inputs {
  _call: ClaimGLWFromVetoCouncilCall;

  constructor(call: ClaimGLWFromVetoCouncilCall) {
    this._call = call;
  }
}

export class ClaimGLWFromVetoCouncilCall__Outputs {
  _call: ClaimGLWFromVetoCouncilCall;

  constructor(call: ClaimGLWFromVetoCouncilCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimUnstakedTokensCall extends ethereum.Call {
  get inputs(): ClaimUnstakedTokensCall__Inputs {
    return new ClaimUnstakedTokensCall__Inputs(this);
  }

  get outputs(): ClaimUnstakedTokensCall__Outputs {
    return new ClaimUnstakedTokensCall__Outputs(this);
  }
}

export class ClaimUnstakedTokensCall__Inputs {
  _call: ClaimUnstakedTokensCall;

  constructor(call: ClaimUnstakedTokensCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimUnstakedTokensCall__Outputs {
  _call: ClaimUnstakedTokensCall;

  constructor(call: ClaimUnstakedTokensCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get requestedDecrease(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FreezeContractCall extends ethereum.Call {
  get inputs(): FreezeContractCall__Inputs {
    return new FreezeContractCall__Inputs(this);
  }

  get outputs(): FreezeContractCall__Outputs {
    return new FreezeContractCall__Outputs(this);
  }
}

export class FreezeContractCall__Inputs {
  _call: FreezeContractCall;

  constructor(call: FreezeContractCall) {
    this._call = call;
  }
}

export class FreezeContractCall__Outputs {
  _call: FreezeContractCall;

  constructor(call: FreezeContractCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class PermitCall extends ethereum.Call {
  get inputs(): PermitCall__Inputs {
    return new PermitCall__Inputs(this);
  }

  get outputs(): PermitCall__Outputs {
    return new PermitCall__Outputs(this);
  }
}

export class PermitCall__Inputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class PermitCall__Outputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class StakeCall extends ethereum.Call {
  get inputs(): StakeCall__Inputs {
    return new StakeCall__Inputs(this);
  }

  get outputs(): StakeCall__Outputs {
    return new StakeCall__Outputs(this);
  }
}

export class StakeCall__Inputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get stakeAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StakeCall__Outputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnstakeCall extends ethereum.Call {
  get inputs(): UnstakeCall__Inputs {
    return new UnstakeCall__Inputs(this);
  }

  get outputs(): UnstakeCall__Outputs {
    return new UnstakeCall__Outputs(this);
  }
}

export class UnstakeCall__Inputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnstakeCall__Outputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }
}
